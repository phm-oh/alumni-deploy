events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # Basic Settings
    sendfile on;
    keepalive_timeout 65;
    client_max_body_size 10M;

    # Upstream Servers
    upstream alumni_backend {
        server alumni-backend:5500;
    }
    
    upstream alumni_frontend {
        server alumni-frontend:80;
    }

    # Main Server Block
    server {
        listen 80;
        server_name _;

        # üéØ API Routes - ‡πÅ‡∏Å‡πâ‡∏õ‡∏±‡∏ç‡∏´‡∏≤ localhost ‡πÇ‡∏î‡∏¢‡∏Å‡∏≤‡∏£ proxy
        location /api/ {
            proxy_pass http://alumni_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
            # CORS Headers for frontend
            add_header Access-Control-Allow-Origin "http://49.231.145.165:3001" always;
            add_header Access-Control-Allow-Origin "http://49.231.145.165:3000" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With" always;
            add_header Access-Control-Allow-Credentials "true" always;
            
            # Handle preflight requests
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin "http://49.231.145.165:3001";
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
                add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With";
                add_header Access-Control-Allow-Credentials "true";
                add_header Content-Length 0;
                add_header Content-Type text/plain;
                return 200;
            }
        }

        # üéØ Frontend Routes
        location / {
            proxy_pass http://alumni_frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            # SPA Fallback
            try_files $uri $uri/ @fallback;
        }

        # Fallback for SPA
        location @fallback {
            proxy_pass http://alumni_frontend;
        }

        # Health Check
        location /health {
            return 200 "Alumni System OK\n";
            add_header Content-Type text/plain;
        }
    }
}